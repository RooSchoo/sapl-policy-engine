#
# Copyright Â© 2017-2021 Dominic Heutelbeck (dominic@heutelbeck.com)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: Build

on:
  workflow_dispatch:
    branches: [master, 2.0.x]
  push:
    branches: [master, 2.0.x]
    paths-ignore: ["sapl-documentation/**", ".github/build_documentation.yml"]

jobs:
  tests:
    strategy:
      matrix:
        java: [ '11' , '17' ]
        os: [ubuntu-latest, windows-latest, macos-latest]
    name: JDK ${{ matrix.java }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    steps:
    - name: Check out
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: ${{ matrix.java }}

    - name: Set up Node.js 14 LTS
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Cache Maven dependencies
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Run tests
      run: mvn -B package javadoc:jar # package, as the maven plugin loads resources from the dependency packages

  analyze:
    needs: [tests]
    name: Code analysis and coverage
    if: ${{ false }}  # disable for branch to avoid brach confusion with community edition of sonarqube server
    runs-on: ubuntu-latest
    steps:
    - name: Check out
      uses: actions/checkout@v2
      with:
        # avoid shallow clone to ensure correct sonarqube auto assignment
        fetch-depth: 0

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: 11

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Cache Maven dependencies
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Run analysis (JaCoCo, Sonar)
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B org.jacoco:jacoco-maven-plugin:0.8.7:prepare-agent verify org.jacoco:jacoco-maven-plugin:0.8.7:report org.sonarsource.scanner.maven:sonar-maven-plugin:RELEASE:sonar -Dsonar.host.url=https://sonar.ftk.de -Dsonar.login=${SONAR_TOKEN} -Dsonar.exclusions=**/xtext-gen/**/*,**/xtend-gen/**/*,**/emf-gen/**/*

    - name: Clean up local repository before caching
      run: rm -rf ~/.m2/repository/io/sapl

  dockerize:
    needs: [tests]
    name: Deliver server images
    runs-on: ubuntu-latest
    steps:
    - name: Check out
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: 11

    - name: Configure servers
      uses: s4u/maven-settings-action@v2.3.0
      with:
        githubServer: false
        servers: |
          [{
              "id": "ghcr.io",
              "username": "${{ secrets.GHUB_USERNAME }}",
              "password": "${{ secrets.GHUB_ACCESS_TOKEN }}"
           }]

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Cache Maven dependencies
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Build Modules
      run: mvn -B install -DskipTests

    - name: Build SAPL Server LT image
      run: mvn -B dockerfile:build -pl sapl-server-lt -P docker -DskipTests

    - name: Push image
      run: mvn -B dockerfile:push -pl sapl-server-lt -P docker -DskipTests

    - name: Clean up local repository before caching
      run: rm -rf ~/.m2/repository/io/sapl

  deploy:
    needs: [tests]
    name: Deploy to central
    runs-on: ubuntu-latest
    steps:
    - name: Check out
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: 11

    - name: Configure servers
      uses: s4u/maven-settings-action@v2.3.0
      with:
        githubServer: false
        servers: |
          [{
              "id": "ossrh",
              "username": "${{ secrets.OSSRH_USERNAME }}",
              "password": "${{ secrets.OSSRH_PASSWORD }}"
           },{
              "id": "ghcr.io",
              "username": "${{ secrets.GHUB_USERNAME }}",
              "password": "${{ secrets.GHUB_ACCESS_TOKEN }}"
           },{
              "id": "github",
              "username": "${{ secrets.GHUB_USERNAME }}",
              "password": "${{ secrets.GHUB_ACCESS_TOKEN }}"
           }]

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Cache Maven dependencies
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Install GPG Code Signing Key
      run: |
        cat <(echo -e "${{ secrets.OSSRH_GPG_SECRET_KEY }}") | gpg --batch --import
        gpg --list-secret-keys --keyid-format LONG

    - name: Deploy Maven artefacts
      run: mvn -B --no-transfer-progress -Dgpg.passphrase=${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }} -pl !sapl-server-lt,!sapl-documentation -Ppublish -DskipTests clean package deploy

    - name: Trigger CI build of downstream repositories
      run: |
        curl -XPOST -u "${{ secrets.GHUB_USERNAME }}:${{ secrets.GHUB_ACCESS_TOKEN }}" -H "Accept: application/vnd.github.everest-preview+json" -H "Content-Type: application/json" https://api.github.com/repos/heutelbeck/sapl-demos/dispatches --data '{"event_type": "build_application"}'
        curl -XPOST -u "${{ secrets.GHUB_USERNAME }}:${{ secrets.GHUB_ACCESS_TOKEN }}" -H "Accept: application/vnd.github.everest-preview+json" -H "Content-Type: application/json" https://api.github.com/repos/heutelbeck/sapl-server/dispatches --data '{"event_type": "build_application"}'
        curl -XPOST -u "${{ secrets.GHUB_USERNAME }}:${{ secrets.GHUB_ACCESS_TOKEN }}" -H "Accept: application/vnd.github.everest-preview+json" -H "Content-Type: application/json" https://api.github.com/repos/heutelbeck/sapl-extensions/dispatches --data '{"event_type": "build_application"}'
        curl -XPOST -u "${{ secrets.GHUB_USERNAME }}:${{ secrets.GHUB_ACCESS_TOKEN }}" -H "Accept: application/vnd.github.everest-preview+json" -H "Content-Type: application/json" https://api.github.com/repos/heutelbeck/sapl-benchmark/dispatches --data '{"event_type": "build_application"}'

    - name: Clean up local repository before caching
      run: rm -rf ~/.m2/repository/io/sapl
